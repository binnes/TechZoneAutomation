{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"TechZone Automation \u00b6 This repo is to document exploration of TechZone Automation / Cloud Native Toolkit.","title":"Home"},{"location":"#techzone-automation","text":"This repo is to document exploration of TechZone Automation / Cloud Native Toolkit.","title":"TechZone Automation"},{"location":"plan/","text":"Planning \u00b6 The following investigation needs to be done and written up in preparation for creating user documentation. The work will be split into 2 sections: Consumption - how to use TechZone Automation to create an OpenShift Cluster on different clouds then install and configure a defined set of software Contribute - how to contribute modules to TechZone Automation to extend the catalog of modules available to install. This may include open source software, other commercial software offerings Consumption \u00b6 Before someone can contribute a module they need to understand how TechZone Automation works and how to use it to lay down a cluster and set of software. The investigations in this section should: Setup \u00b6 cover system setup to be able to use TechZone Automation on: MacOS (Intel) MacOS (Apple Silicon) Windows (10 and 11) Linux (Fedora) Linux (Ubuntu) In addition to the OS options there should be clear instructions to cover the following container tooling options: Docker Podman (if this is going to be a supported option going forward?) Multipass Building BOM \u00b6 There is an extensive catalog of modules so some explanation is needed to cover the tooling available and also explain how modules work to build an entire system (dependencies, variables, etc....) Installing an environment using a BOM \u00b6 How to take a BOM and run it to create an environment (this should work with all allowed OS and container tool combinations) Contribution \u00b6 Todo Complete this part of the plan","title":"Plan"},{"location":"plan/#planning","text":"The following investigation needs to be done and written up in preparation for creating user documentation. The work will be split into 2 sections: Consumption - how to use TechZone Automation to create an OpenShift Cluster on different clouds then install and configure a defined set of software Contribute - how to contribute modules to TechZone Automation to extend the catalog of modules available to install. This may include open source software, other commercial software offerings","title":"Planning"},{"location":"plan/#consumption","text":"Before someone can contribute a module they need to understand how TechZone Automation works and how to use it to lay down a cluster and set of software. The investigations in this section should:","title":"Consumption"},{"location":"plan/#setup","text":"cover system setup to be able to use TechZone Automation on: MacOS (Intel) MacOS (Apple Silicon) Windows (10 and 11) Linux (Fedora) Linux (Ubuntu) In addition to the OS options there should be clear instructions to cover the following container tooling options: Docker Podman (if this is going to be a supported option going forward?) Multipass","title":"Setup"},{"location":"plan/#building-bom","text":"There is an extensive catalog of modules so some explanation is needed to cover the tooling available and also explain how modules work to build an entire system (dependencies, variables, etc....)","title":"Building BOM"},{"location":"plan/#installing-an-environment-using-a-bom","text":"How to take a BOM and run it to create an environment (this should work with all allowed OS and container tool combinations)","title":"Installing an environment using a BOM"},{"location":"plan/#contribution","text":"Todo Complete this part of the plan","title":"Contribution"},{"location":"reference/","text":"Reference material \u00b6 Supported runtime tools for iascable Thomas's blog entry Cloud-Native Expertise Roadmap Modules catalog Ascent tool Operate - Cloud Native Toolkit","title":"Reference"},{"location":"reference/#reference-material","text":"Supported runtime tools for iascable Thomas's blog entry Cloud-Native Expertise Roadmap Modules catalog Ascent tool Operate - Cloud Native Toolkit","title":"Reference material"},{"location":"setup-podman/","text":"Steps for iascable \u00b6 Setup and first deploy (podman) \u00b6 Create or change into the directory containing your BOM then run the following commands: 1. install podman : ```shell brew install podman ``` install iascable if not already installed : curl -sL https://raw.githubusercontent.com/cloud-native-toolkit/iascable/main/install.sh | sudo sh 3. initialise podman : podman machine init 4. enable podman root : podman machine set --rootful 5. start podman machine : podman machine start create BOM e.g. my-ibm-vpc-gitops.yaml apiVersion : cloudnativetoolkit.dev/v1alpha1 kind : BillOfMaterial metadata : name : my-ibm-vpc-gitops spec : modules : - name : ibm-vpc - name : ibm-vpc-subnets - name : ibm-vpc-gateways - name : ibm-ocp-vpc variables : - name : worker_count value : 1 - name : gitops-repo - name : argocd-bootstrap run iascable build: iascable build -i my-ibm-vpc-gitops.yaml 8. launch the tools container : cd output ./launch.sh podman --pull 9. copy the mounted directory to a container directory (needed as podman has issues with symbolic links on a mounted directory) : cp -R * /workspaces run the terraform apply (optionally a variables.yaml file can be created - if not you will be prompted for required values) : cd /workspaces/my-ibm-vpc-gitops ./apply.sh answer any prompts for missing variable values, check the steps listed and confirm the actions by responding yes wait for terraform and gitops to complete the install !!!Note: the launch script will attach a podman volume for the workspace filesystem, which persists across multiple container runs, so you may need to clear the workspace directory if you don\u2019t need the content from previous runs.","title":"Steps for iascable"},{"location":"setup-podman/#steps-for-iascable","text":"","title":"Steps for iascable"},{"location":"setup-podman/#setup-and-first-deploy-podman","text":"Create or change into the directory containing your BOM then run the following commands: 1. install podman : ```shell brew install podman ``` install iascable if not already installed : curl -sL https://raw.githubusercontent.com/cloud-native-toolkit/iascable/main/install.sh | sudo sh 3. initialise podman : podman machine init 4. enable podman root : podman machine set --rootful 5. start podman machine : podman machine start create BOM e.g. my-ibm-vpc-gitops.yaml apiVersion : cloudnativetoolkit.dev/v1alpha1 kind : BillOfMaterial metadata : name : my-ibm-vpc-gitops spec : modules : - name : ibm-vpc - name : ibm-vpc-subnets - name : ibm-vpc-gateways - name : ibm-ocp-vpc variables : - name : worker_count value : 1 - name : gitops-repo - name : argocd-bootstrap run iascable build: iascable build -i my-ibm-vpc-gitops.yaml 8. launch the tools container : cd output ./launch.sh podman --pull 9. copy the mounted directory to a container directory (needed as podman has issues with symbolic links on a mounted directory) : cp -R * /workspaces run the terraform apply (optionally a variables.yaml file can be created - if not you will be prompted for required values) : cd /workspaces/my-ibm-vpc-gitops ./apply.sh answer any prompts for missing variable values, check the steps listed and confirm the actions by responding yes wait for terraform and gitops to complete the install !!!Note: the launch script will attach a podman volume for the workspace filesystem, which persists across multiple container runs, so you may need to clear the workspace directory if you don\u2019t need the content from previous runs.","title":"Setup and first deploy (podman)"},{"location":"setup/","text":"Setup \u00b6 Todo This section is under construction Setup and first deploy (multipass) \u00b6 Multipass networking doesn't work (no external connectivity, though name resolution works) with Cisco AnyConnect running! Turning off Cisco AnyConnect and the networking works - you cannot start Cisco AnyConnect while multipass is running or the network will be killed. Create or change into the directory containing your BOM then run the following commands: install multipass : brew install --cask multipass download the cloud init file : curl https://raw.githubusercontent.com/cloud-native-toolkit/sre-utilities/main/cloud-init/cli-tools.yaml --output cli-tools.yaml launch multipass vm : multipass launch --name cli-tools --cloud-init ./cli-tools.yaml mount current directory into VM : multipass mount $PWD cli-tools:/automation enter vm : multipass shell cli-tools install iascable : curl -sL https://raw.githubusercontent.com/cloud-native-toolkit/iascable/main/install.sh | sudo bash - this is different to the command given in the docs (pipe into bash not sh) create BOM e.g. my-ibm-vpc-gitops.yaml apiVersion : cloudnativetoolkit.dev/v1alpha1 kind : BillOfMaterial metadata : name : my-ibm-vpc-gitops spec : modules : - name : ibm-vpc - name : ibm-vpc-subnets - name : ibm-vpc-gateways - name : ibm-ocp-vpc variables : - name : worker_count value : 1 - name : gitops-repo - name : argocd-bootstrap run iascable build: iascable build -i oc-dev.yaml run the terraform apply (optionally a variables.yaml file can be created - if not you will be prompted for required values) : cd output/my-ibm-vpc-gitops ./apply.sh answer any prompts for missing variable values, check the steps listed and confirm the actions by responding yes wait for terraform and gitops to complete the install Issues: guidance on variable values to be provided is needed certain modules fail (sealed-secrets-controller image fails to pull from docker.io - timeout) Setup and first deploy (podman) \u00b6 Create or change into the directory containing your BOM then run the following commands: install podman : brew install podman install iascable if not already installed : curl -sL https://raw.githubusercontent.com/cloud-native-toolkit/iascable/main/install.sh | sudo sh initialise podman : podman machine init enable podman root : podman machine set --rootful start podman machine : podman machine start create BOM e.g. my-ibm-vpc-gitops.yaml apiVersion : cloudnativetoolkit.dev/v1alpha1 kind : BillOfMaterial metadata : name : my-ibm-vpc-gitops spec : modules : - name : ibm-vpc - name : ibm-vpc-subnets - name : ibm-vpc-gateways - name : ibm-ocp-vpc variables : - name : worker_count value : 1 - name : gitops-repo - name : argocd-bootstrap run iascable build: iascable build -i my-ibm-vpc-gitops.yaml launch the tools container : cd output ./launch.sh podman --pull copy the mounted directory to a container directory (needed as podman has issues with symbolic links on a mounted directory) : cp -R * /workspaces run the terraform apply (optionally a variables.yaml file can be created - if not you will be prompted for required values) : cd /workspaces/my-ibm-vpc-gitops ./apply.sh answer any prompts for missing variable values, check the steps listed and confirm the actions by responding yes wait for terraform and gitops to complete the install Note the launch script will attach a podman volume for the workspace filesystem, which persists across multiple container runs, so you may need to clear the workspaces directory if you don't need the content from previous runs.","title":"Setup"},{"location":"setup/#setup","text":"Todo This section is under construction","title":"Setup"},{"location":"setup/#setup-and-first-deploy-multipass","text":"Multipass networking doesn't work (no external connectivity, though name resolution works) with Cisco AnyConnect running! Turning off Cisco AnyConnect and the networking works - you cannot start Cisco AnyConnect while multipass is running or the network will be killed. Create or change into the directory containing your BOM then run the following commands: install multipass : brew install --cask multipass download the cloud init file : curl https://raw.githubusercontent.com/cloud-native-toolkit/sre-utilities/main/cloud-init/cli-tools.yaml --output cli-tools.yaml launch multipass vm : multipass launch --name cli-tools --cloud-init ./cli-tools.yaml mount current directory into VM : multipass mount $PWD cli-tools:/automation enter vm : multipass shell cli-tools install iascable : curl -sL https://raw.githubusercontent.com/cloud-native-toolkit/iascable/main/install.sh | sudo bash - this is different to the command given in the docs (pipe into bash not sh) create BOM e.g. my-ibm-vpc-gitops.yaml apiVersion : cloudnativetoolkit.dev/v1alpha1 kind : BillOfMaterial metadata : name : my-ibm-vpc-gitops spec : modules : - name : ibm-vpc - name : ibm-vpc-subnets - name : ibm-vpc-gateways - name : ibm-ocp-vpc variables : - name : worker_count value : 1 - name : gitops-repo - name : argocd-bootstrap run iascable build: iascable build -i oc-dev.yaml run the terraform apply (optionally a variables.yaml file can be created - if not you will be prompted for required values) : cd output/my-ibm-vpc-gitops ./apply.sh answer any prompts for missing variable values, check the steps listed and confirm the actions by responding yes wait for terraform and gitops to complete the install Issues: guidance on variable values to be provided is needed certain modules fail (sealed-secrets-controller image fails to pull from docker.io - timeout)","title":"Setup and first deploy (multipass)"},{"location":"setup/#setup-and-first-deploy-podman","text":"Create or change into the directory containing your BOM then run the following commands: install podman : brew install podman install iascable if not already installed : curl -sL https://raw.githubusercontent.com/cloud-native-toolkit/iascable/main/install.sh | sudo sh initialise podman : podman machine init enable podman root : podman machine set --rootful start podman machine : podman machine start create BOM e.g. my-ibm-vpc-gitops.yaml apiVersion : cloudnativetoolkit.dev/v1alpha1 kind : BillOfMaterial metadata : name : my-ibm-vpc-gitops spec : modules : - name : ibm-vpc - name : ibm-vpc-subnets - name : ibm-vpc-gateways - name : ibm-ocp-vpc variables : - name : worker_count value : 1 - name : gitops-repo - name : argocd-bootstrap run iascable build: iascable build -i my-ibm-vpc-gitops.yaml launch the tools container : cd output ./launch.sh podman --pull copy the mounted directory to a container directory (needed as podman has issues with symbolic links on a mounted directory) : cp -R * /workspaces run the terraform apply (optionally a variables.yaml file can be created - if not you will be prompted for required values) : cd /workspaces/my-ibm-vpc-gitops ./apply.sh answer any prompts for missing variable values, check the steps listed and confirm the actions by responding yes wait for terraform and gitops to complete the install Note the launch script will attach a podman volume for the workspace filesystem, which persists across multiple container runs, so you may need to clear the workspaces directory if you don't need the content from previous runs.","title":"Setup and first deploy (podman)"}]}